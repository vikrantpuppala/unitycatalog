/*
 * Unity Catalog API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.unitycatalog.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Protocol
 */
@JsonPropertyOrder({
  Protocol.JSON_PROPERTY_MIN_READER_VERSION,
  Protocol.JSON_PROPERTY_MIN_WRITER_VERSION,
  Protocol.JSON_PROPERTY_READER_FEATURES,
  Protocol.JSON_PROPERTY_WRITER_FEATURES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.5.0")
public class Protocol {
  public static final String JSON_PROPERTY_MIN_READER_VERSION = "min_reader_version";
  private Integer minReaderVersion;

  public static final String JSON_PROPERTY_MIN_WRITER_VERSION = "min_writer_version";
  private Integer minWriterVersion;

  public static final String JSON_PROPERTY_READER_FEATURES = "reader_features";
  private List<String> readerFeatures = new ArrayList<>();

  public static final String JSON_PROPERTY_WRITER_FEATURES = "writer_features";
  private List<String> writerFeatures = new ArrayList<>();

  public Protocol() { 
  }

  public Protocol minReaderVersion(Integer minReaderVersion) {
    this.minReaderVersion = minReaderVersion;
    return this;
  }

   /**
   * The min reader version defined by the protocol.
   * @return minReaderVersion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_READER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinReaderVersion() {
    return minReaderVersion;
  }


  @JsonProperty(JSON_PROPERTY_MIN_READER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinReaderVersion(Integer minReaderVersion) {
    this.minReaderVersion = minReaderVersion;
  }


  public Protocol minWriterVersion(Integer minWriterVersion) {
    this.minWriterVersion = minWriterVersion;
    return this;
  }

   /**
   * The min writer version defined by the protocol.
   * @return minWriterVersion
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_WRITER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinWriterVersion() {
    return minWriterVersion;
  }


  @JsonProperty(JSON_PROPERTY_MIN_WRITER_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinWriterVersion(Integer minWriterVersion) {
    this.minWriterVersion = minWriterVersion;
  }


  public Protocol readerFeatures(List<String> readerFeatures) {
    this.readerFeatures = readerFeatures;
    return this;
  }

  public Protocol addReaderFeaturesItem(String readerFeaturesItem) {
    if (this.readerFeatures == null) {
      this.readerFeatures = new ArrayList<>();
    }
    this.readerFeatures.add(readerFeaturesItem);
    return this;
  }

   /**
   * The reader features defined by the protocol (can be empty if the table has no reader features set).
   * @return readerFeatures
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_READER_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getReaderFeatures() {
    return readerFeatures;
  }


  @JsonProperty(JSON_PROPERTY_READER_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReaderFeatures(List<String> readerFeatures) {
    this.readerFeatures = readerFeatures;
  }


  public Protocol writerFeatures(List<String> writerFeatures) {
    this.writerFeatures = writerFeatures;
    return this;
  }

  public Protocol addWriterFeaturesItem(String writerFeaturesItem) {
    if (this.writerFeatures == null) {
      this.writerFeatures = new ArrayList<>();
    }
    this.writerFeatures.add(writerFeaturesItem);
    return this;
  }

   /**
   * The writer features defined by the protocol (can be empty if the table has no writer features set).
   * @return writerFeatures
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WRITER_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWriterFeatures() {
    return writerFeatures;
  }


  @JsonProperty(JSON_PROPERTY_WRITER_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWriterFeatures(List<String> writerFeatures) {
    this.writerFeatures = writerFeatures;
  }


  /**
   * Return true if this Protocol object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Protocol protocol = (Protocol) o;
    return Objects.equals(this.minReaderVersion, protocol.minReaderVersion) &&
        Objects.equals(this.minWriterVersion, protocol.minWriterVersion) &&
        Objects.equals(this.readerFeatures, protocol.readerFeatures) &&
        Objects.equals(this.writerFeatures, protocol.writerFeatures);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minReaderVersion, minWriterVersion, readerFeatures, writerFeatures);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Protocol {\n");
    sb.append("    minReaderVersion: ").append(toIndentedString(minReaderVersion)).append("\n");
    sb.append("    minWriterVersion: ").append(toIndentedString(minWriterVersion)).append("\n");
    sb.append("    readerFeatures: ").append(toIndentedString(readerFeatures)).append("\n");
    sb.append("    writerFeatures: ").append(toIndentedString(writerFeatures)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `min_reader_version` to the URL query string
    if (getMinReaderVersion() != null) {
      joiner.add(String.format("%smin_reader_version%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMinReaderVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `min_writer_version` to the URL query string
    if (getMinWriterVersion() != null) {
      joiner.add(String.format("%smin_writer_version%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMinWriterVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `reader_features` to the URL query string
    if (getReaderFeatures() != null) {
      for (int i = 0; i < getReaderFeatures().size(); i++) {
        joiner.add(String.format("%sreader_features%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getReaderFeatures().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `writer_features` to the URL query string
    if (getWriterFeatures() != null) {
      for (int i = 0; i < getWriterFeatures().size(); i++) {
        joiner.add(String.format("%swriter_features%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getWriterFeatures().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    return joiner.toString();
  }
}

